{
  "_args": [
    [
      {
        "raw": "viewport-dimensions@^0.2.0",
        "scope": null,
        "escapedName": "viewport-dimensions",
        "name": "viewport-dimensions",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "C:\\Users\\nitesh\\Downloads\\react-contact-manager-master\\react-contact-manager-master\\node_modules\\units-css"
    ]
  ],
  "_from": "viewport-dimensions@>=0.2.0 <0.3.0",
  "_id": "viewport-dimensions@0.2.0",
  "_inCache": true,
  "_location": "/viewport-dimensions",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "alexdunphy",
    "email": "alexanderdunphy@gmail.com"
  },
  "_npmVersion": "2.8.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "viewport-dimensions@^0.2.0",
    "scope": null,
    "escapedName": "viewport-dimensions",
    "name": "viewport-dimensions",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/units-css"
  ],
  "_resolved": "https://registry.npmjs.org/viewport-dimensions/-/viewport-dimensions-0.2.0.tgz",
  "_shasum": "de740747db5387fd1725f5175e91bac76afdf36c",
  "_shrinkwrap": null,
  "_spec": "viewport-dimensions@^0.2.0",
  "_where": "C:\\Users\\nitesh\\Downloads\\react-contact-manager-master\\react-contact-manager-master\\node_modules\\units-css",
  "author": {
    "name": "Alex Dunphy",
    "email": "alexanderdunphy@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/alexdunphy/viewport/issues"
  },
  "dependencies": {},
  "description": "Simple utility for watching and retrieving browser viewport width, height, vmin and vmax",
  "devDependencies": {
    "bower": "^1.5.2",
    "chai": "^3.2.0",
    "coveralls": "^2.11.4",
    "gulp": "^3.9.0",
    "gulp-eslint": "^1.0.0",
    "gulp-header": "^1.7.1",
    "gulp-notify": "^2.2.0",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^1.4.0",
    "gulp-util": "^3.0.6",
    "karma": "^0.13.9",
    "karma-coverage": "^0.5.1",
    "karma-mocha": "^0.2.0",
    "karma-mocha-reporter": "^1.1.1",
    "karma-notify-reporter": "^0.1.1",
    "karma-phantomjs-launcher": "^0.2.1",
    "karma-sauce-launcher": "^0.2.14",
    "karma-sinon-chai": "^1.0.0",
    "lodash": "^3.10.1",
    "mocha": "^2.3.0",
    "phantomjs": "^1.9.18",
    "run-sequence": "^1.1.2",
    "webpack": "^1.12.0"
  },
  "directories": {},
  "dist": {
    "shasum": "de740747db5387fd1725f5175e91bac76afdf36c",
    "tarball": "https://registry.npmjs.org/viewport-dimensions/-/viewport-dimensions-0.2.0.tgz"
  },
  "gitHead": "66f8ccc6e35cb15d3a2b8889e7d59706c43486d8",
  "homepage": "https://github.com/alexdunphy/viewport",
  "keywords": [
    "viewport",
    "browser",
    "window",
    "document",
    "width",
    "height",
    "innerWidth",
    "innerHeight",
    "clientWidth",
    "clientHeight",
    "dimensions",
    "dimension"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "alexdunphy",
      "email": "alexanderdunphy@gmail.com"
    }
  ],
  "name": "viewport-dimensions",
  "optionalDependencies": {},
  "readme": "[![Travis CI status](https://img.shields.io/travis/alexdunphy/viewport.svg)](https://travis-ci.org/alexdunphy/viewport)\n[![Coveralls status](https://img.shields.io/coveralls/alexdunphy/viewport.svg)](https://coveralls.io/r/alexdunphy/viewport)\n[![devDependencies status](https://img.shields.io/david/dev/alexdunphy/viewport.svg)](https://david-dm.org/alexdunphy/viewport#info=devDependencies)\n\n[![Sauce Labs status](https://saucelabs.com/browser-matrix/alexdunphy-viewport.svg)](https://saucelabs.com/u/alexdunphy-viewport)\n\n# Viewport\n\nSimple utility for watching and retrieving browser viewport width, height, vmin and vmax.\n\n`documentElement.clientWidth` is used (rather than `window.innerWidth`), so reported viewport dimensions will exclude scrollbar dimensions.\n\n## Install\n\n#### Bower\n\n`bower install -S viewport-dimensions`\n\n#### npm\n\n`npm i -S viewport-dimensions`\n\n(One object is exported:)\n\n```javascript\nvar viewport = require('viewport');\n```\n\n## API\n\n### #width()\nReturns _{number}_ - Browser viewport width.\n\n```javascript\nviewport.width(); // (e.g.) 1024\n```\n\n### #height()\nReturns _{number}_ - Browser viewport height.\n\n```javascript\nviewport.height(); // (e.g.) 768\n```\n\n### #max()\nReturns _{number}_ - Maximum browser dimension (width/height).\n\n```javascript\nviewport.max(); // (e.g.) 1024\n```\n\n### #min()\nReturns _{number}_ - Minimum browser dimension (width/height).\n\n```javascript\nviewport.height(); // (e.g.) 768\n```\n\n### #setDimensions()\nSet internal dimension references to current browser viewport width and height.\n\n```javascript\nviewport.setDimensions();\n```\n\n## Environment\n\nWon't generate errors if run server-side, but won't do anything too useful either.\n\n## Development\n\n1. Clone repo and `npm install`\n2. Make changes and ensure linting (`gulp lint`) & tests (`gulp test`) pass (combined task: `gulp dev`)\n3. Create distributable files (`gulp dist`) - combined dev + dist task: `gulp`\n\nUse `gulp watch` to run linter and tests on each file change (equivalent to manually running `gulp dev`).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/alexdunphy/viewport.git"
  },
  "scripts": {
    "coveralls": "if [ ! -f ./test/coverage/lcov.info ]; then npm test; fi; cat ./test/coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "test": "gulp dev"
  },
  "version": "0.2.0"
}
