{
  "_args": [
    [
      {
        "raw": "any-promise@^0.1.0",
        "scope": null,
        "escapedName": "any-promise",
        "name": "any-promise",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\nitesh\\Downloads\\react-contact-manager-master\\react-contact-manager-master\\node_modules\\promise-each"
    ]
  ],
  "_from": "any-promise@>=0.1.0 <0.2.0",
  "_id": "any-promise@0.1.0",
  "_inCache": true,
  "_location": "/any-promise",
  "_npmUser": {
    "name": "kevinbeaty",
    "email": "kevin@simplectic.com"
  },
  "_npmVersion": "1.3.25",
  "_phantomChildren": {},
  "_requested": {
    "raw": "any-promise@^0.1.0",
    "scope": null,
    "escapedName": "any-promise",
    "name": "any-promise",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/promise-each"
  ],
  "_resolved": "https://registry.npmjs.org/any-promise/-/any-promise-0.1.0.tgz",
  "_shasum": "830b680aa7e56f33451d4b049f3bd8044498ee27",
  "_shrinkwrap": null,
  "_spec": "any-promise@^0.1.0",
  "_where": "C:\\Users\\nitesh\\Downloads\\react-contact-manager-master\\react-contact-manager-master\\node_modules\\promise-each",
  "author": {
    "name": "Kevin Beaty"
  },
  "browser": "any-promise-shim.js",
  "bugs": {
    "url": "https://github.com/kevinbeaty/any-promise/issues"
  },
  "dependencies": {},
  "description": "Resolve any installed ES6 compatible promise",
  "devDependencies": {
    "bluebird": "~2.5.3",
    "es6-promise": "~2.0.1",
    "mocha": "~2.1.0",
    "native-promise-only": "~0.7.6-a",
    "promise": "~6.0.1",
    "promises-aplus-tests": "~2.1.0",
    "q": "~1.1.2",
    "rsvp": "~3.0.16",
    "when": "~3.6.4"
  },
  "directories": {},
  "dist": {
    "shasum": "830b680aa7e56f33451d4b049f3bd8044498ee27",
    "tarball": "https://registry.npmjs.org/any-promise/-/any-promise-0.1.0.tgz"
  },
  "homepage": "http://github.com/kevinbeaty/any-promise",
  "keywords": [
    "promise",
    "es6"
  ],
  "license": "MIT",
  "main": "any-promise.js",
  "maintainers": [
    {
      "name": "kevinbeaty",
      "email": "kevin@simplectic.com"
    }
  ],
  "name": "any-promise",
  "optionalDependencies": {},
  "readme": "## Any Promise\n\n[![Build Status](https://secure.travis-ci.org/kevinbeaty/any-promise.svg)](http://travis-ci.org/kevinbeaty/any-promise)\n\nLet your library support any ES6 compatible Promise library or polyfill and leave the choice to the end user. The end user can install a polyfill or `npm install` their preference before using this library and the installed library will be automatically detected.\n\nAttempts to load libraries in the following order.  The first successful `require` will be exported.\n\n  - [es6-promise](https://github.com/jakearchibald/es6-promise)\n  - [promise](https://github.com/then/promise)\n  - [native-promise-only](https://github.com/getify/native-promise-only)\n  - [bluebird](https://github.com/petkaantonov/bluebird)\n  - [rsvp](https://github.com/tildeio/rsvp.js)\n  - [when](https://github.com/cujojs/when)\n  - [q](https://github.com/kriskowal/q)\n\nIf no library is installed, attempts to export the global `Promise` (native or polyfill). The `browserify` version will always export the the global `Promise`, so polyfill as necessary.\n\nIf you have multiple libraries installed (e.g. for testing), and would like to specify one you can use the `PROMISE_IMPL` env variable.\n\n```javascript\nvar Promise = require('any-promise');\n\nreturn Promise\n  .all([xf, f, init, coll])\n  .then(fn);\n\n\nreturn new Promise(function(resolve, reject){\n  try {\n    resolve(item);\n  } catch(e){\n    reject(e);\n  }\n});\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kevinbeaty/any-promise.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.1.0"
}
